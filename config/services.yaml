# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'es'
    user_agent: 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.111 Safari/537.36'
    ads_website_url: 'https://www.revolico.com'
    search_page_url: '%ads_website_url%/compra-venta/divisas/search.html'
    search_text: 'usd'
    min_price: 0
    max_price: 1.1
    platform_name: 'USD-CUC Price Notification'
    gh_repo_url: 'https://github.com/elvismdev/usdcuc-price-notification'
    banned_words:
        - compro
        - conpro
        - comprando
        - comprar
        - busco
        - euro
        - euros
        - peso
        - pesos
        - mexicanos
        - canadiense
        - canadienses
        - envia
        - envía
        - enviamos
        - envio
        - envío
        - necesito
        - libra
        - esterlina
        - entrego


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    # App\Controller\:
    #     resource: '../src/Controller'
    #     tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    # Sends an email notification when a AdDeal is found.
    App\EventListener\AdDealNotificationListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist }
        arguments: ['%env(SENDER_ADDRESS)%']


    # Swift Mailer plugins
    app.swiftmailer.defaults_plugin:
        class: Finesse\SwiftMailerDefaultsPlugin\SwiftMailerDefaultsPlugin
        tags:
            - { name: swiftmailer.default.plugin }
        arguments:
            $defaults:
                from:
                    '%env(SENDER_ADDRESS)%': '%platform_name%'
                replyTo: '%env(SENDER_ADDRESS)%' 
